apiVersion: apps/v1
kind: Deployment
metadata:
  name: privacy-intent-pipeline
  labels:
    app: privacy-intent-pipeline
    tier: data-pipeline
spec:
  replicas: 1
  selector:
    matchLabels:
      app: privacy-intent-pipeline
  template:
    metadata:
      labels:
        app: privacy-intent-pipeline
        tier: data-pipeline
    spec:
      containers:
      - name: data-pipeline
        image: privacy-intent-pipeline:latest
        imagePullPolicy: Always
        command: ["python", "-m", "src.pcc_pipeline", "--config", "config.yaml"]
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: PYTHONPATH
          value: "/app"
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka:9092"
        - name: MLFLOW_TRACKING_URI
          value: "http://mlflow:5000"
        - name: PROMETHEUS_ENDPOINT
          value: "http://prometheus:9090"
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: pipeline-output
          mountPath: /app/output
        - name: pipeline-logs
          mountPath: /app/logs
        - name: pipeline-checkpoints
          mountPath: /app/checkpoints
        - name: pipeline-cache
          mountPath: /app/cache
        - name: pipeline-metadata
          mountPath: /app/metadata
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: pipeline-output
        persistentVolumeClaim:
          claimName: pipeline-output-pvc
      - name: pipeline-logs
        persistentVolumeClaim:
          claimName: pipeline-logs-pvc
      - name: pipeline-checkpoints
        persistentVolumeClaim:
          claimName: pipeline-checkpoints-pvc
      - name: pipeline-cache
        persistentVolumeClaim:
          claimName: pipeline-cache-pvc
      - name: pipeline-metadata
        persistentVolumeClaim:
          claimName: pipeline-metadata-pvc
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: daily-conversations-pipeline
  labels:
    app: daily-conversations-pipeline
    tier: data-pipeline
spec:
  replicas: 1
  selector:
    matchLabels:
      app: daily-conversations-pipeline
  template:
    metadata:
      labels:
        app: daily-conversations-pipeline
        tier: data-pipeline
    spec:
      containers:
      - name: daily-conversations
        image: privacy-intent-pipeline:latest
        imagePullPolicy: Always
        command: ["python", "-m", "src.daily_conversations_pipeline", "--config", "config_daily_conversations.yaml"]
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: PYTHONPATH
          value: "/app"
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: vector-store-data
          mountPath: /app/vector_store
        - name: pipeline-logs
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: vector-store-data
        persistentVolumeClaim:
          claimName: vector-store-pvc
      - name: pipeline-logs
        persistentVolumeClaim:
          claimName: pipeline-logs-pvc
      restartPolicy: Always
